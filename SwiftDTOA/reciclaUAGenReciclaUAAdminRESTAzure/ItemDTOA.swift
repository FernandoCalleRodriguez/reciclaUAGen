//
// ItemDTOA.swift
// 
// Code autogenerated. Do not modify this file.
//

import Foundation
import SwiftyJSON
		
class ItemDTOA : DTOA
{
	// MARK: - Properties

	var id: Int?;
	
	var nombre: String?;
	var descripcion: String?;
	var imagen: String?;
	var esValido: Estado?;
	var puntuacion: Int?;
	
	/* Rol: Item o--> Material */
	var materialItem: MaterialDTOA?;

	
	
	
	
	// MARK: - Constructor
	
	init ()
	{
		// Empty constructor
	}
	
	
	
	// MARK: - JSON <-> DTOA
	
	required init (fromJSONObject json: JSON)
	{
		self.id = json["Id"].object as? Int
		
	
		self.nombre = json["Nombre"].object as? String;
		self.descripcion = json["Descripcion"].object as? String;
		self.imagen = json["Imagen"].object as? String;
		if let enumValue = json["EsValido"].object as? Int
		{
			self.esValido = Estado(rawValue: enumValue);
		}
		self.puntuacion = json["Puntuacion"].object as? Int;
		
		if (json["MaterialItem"] != JSON.null)
		{
			self.materialItem = MaterialDTOA(fromJSONObject: json["MaterialItem"]);
		}

		
	}
	
	func toDictionary() -> [String : AnyObject]
	{
		var dictionary: [String : AnyObject] = [:];
		
		dictionary["Id"] = self.id;
		
	

	
		dictionary["Nombre"] = self.nombre;
	
	

	
		dictionary["Descripcion"] = self.descripcion;
	
	

	
		dictionary["Imagen"] = self.imagen;
	
	

	
		dictionary["EsValido"] = self.esValido?.rawValue;
	
	

	
		dictionary["Puntuacion"] = self.puntuacion;
	
	
		
		dictionary["MaterialItem"] = self.materialItem?.toDictionary() ?? NSNull();

		
		
		return dictionary;
	}
}

	