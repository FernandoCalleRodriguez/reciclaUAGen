
package reciclaUAGenReciclaUARESTAzure.uiModels.DTOA;

import reciclaUAGenReciclaUARESTAzure.uiModels.DTO.*;
import reciclaUAGenReciclaUARESTAzure.uiModels.DTO.utils.*;
import reciclaUAGenReciclaUARESTAzure.uiModels.DTO.enumerations.*;

import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 * Code autogenerated. Do not modify this file.
 */
public class EdificioDTOA extends DTOA
{
	// region - Members, getters and setters

	private Integer id;
	public Integer getId () { return id; }
	public void setId (Integer id) { this.id = id; }

	
	private String nombre;
	public String getNombre () { return nombre; }
	public void setNombre (String nombre) { this.nombre = nombre; }
	
	
	/* Rol: Edificio o--> Planta */
	private ArrayList<PlantaDTOA> plantasEdicio;
	public ArrayList<PlantaDTOA> getPlantasEdicio () { return plantasEdicio; }
	public void setPlantasEdicio (ArrayList<PlantaDTOA> plantasEdicio) { this.plantasEdicio = plantasEdicio; }

	
	
	// endregion
	
	
	
	// region - Constructor and JSON <-> DTOA <-> DTO
	
	public EdificioDTOA ()
	{
		// Empty constructor
	}
	
	@Override
	public void setFromJSON (JSONObject json)
	{
		try
		{
			if (!JSONObject.NULL.equals(json.opt("Id")))
			{
				this.id = (Integer) json.opt("Id");
			}
			

			if (!JSONObject.NULL.equals(json.opt("Nombre")))
			{
			 
				this.nombre = (String) json.opt("Nombre");
			 
			}
			

			JSONArray arrayPlantasEdicio = json.optJSONArray("PlantasEdicio");
			if (arrayPlantasEdicio != null)
			{
				this.plantasEdicio = new ArrayList<PlantaDTOA>();
				for (int i = 0; i < arrayPlantasEdicio.length(); ++i)
				{
					JSONObject subJson = (JSONObject) arrayPlantasEdicio.opt(i);
					PlantaDTOA tmp = new PlantaDTOA();
					tmp.setFromJSON(subJson);
					this.plantasEdicio.add(tmp);
				}
			}

			
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}
	
	public JSONObject toJSON ()
	{
		JSONObject json = new JSONObject();
		
		try
		{
			if (this.id != null){
				json.put("Id", this.id);
			}
			
		
		  if (this.nombre != null)
			json.put("Nombre", this.nombre);
		
			

			if (this.plantasEdicio != null)
			{
				JSONArray jsonArray = new JSONArray();
				for (int i = 0; i < this.plantasEdicio.size(); ++i)
				{
					jsonArray.put(this.plantasEdicio.get(i).toJSON());
				}
				json.put("PlantasEdicio", jsonArray);
			}

			
		}
		catch (JSONException e)
		{
			e.printStackTrace();
		}
		
		return json;
	}
	
	@Override 
	public IDTO toDTO ()
	{
		EdificioDTO dto = new EdificioDTO ();
		
		// Attributes
		
	dto.setId (this.getId());

		
	dto.setNombre (this.getNombre());

		
		
		// Roles
					// TODO: from DTOA [ PlantasEdicio ] (dataType : ArrayList<PlantaDTOA>) to DTO [ Plantas ]
		
		
		return dto;
	}

	// endregion
}

	