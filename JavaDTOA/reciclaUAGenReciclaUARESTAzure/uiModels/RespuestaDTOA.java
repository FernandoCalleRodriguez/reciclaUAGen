
package reciclaUAGenReciclaUARESTAzure.uiModels.DTOA;

import reciclaUAGenReciclaUARESTAzure.uiModels.DTO.*;
import reciclaUAGenReciclaUARESTAzure.uiModels.DTO.utils.*;
import reciclaUAGenReciclaUARESTAzure.uiModels.DTO.enumerations.*;

import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 * Code autogenerated. Do not modify this file.
 */
public class RespuestaDTOA extends DTOA
{
	// region - Members, getters and setters

	private Integer id;
	public Integer getId () { return id; }
	public void setId (Integer id) { this.id = id; }

	
	private String cuerpo;
	public String getCuerpo () { return cuerpo; }
	public void setCuerpo (String cuerpo) { this.cuerpo = cuerpo; }
	
	private Boolean esCorrecta;
	public Boolean getEsCorrecta () { return esCorrecta; }
	public void setEsCorrecta (Boolean esCorrecta) { this.esCorrecta = esCorrecta; }
	
	private Integer util;
	public Integer getUtil () { return util; }
	public void setUtil (Integer util) { this.util = util; }
	
	private java.util.Date fecha;
	public java.util.Date getFecha () { return fecha; }
	public void setFecha (java.util.Date fecha) { this.fecha = fecha; }
	
	
	/* Rol: Respuesta o--> UsuarioWebAutenticado */
	private UsuarioWebAutenticadoDTOA usuarioRespuesta;
	public UsuarioWebAutenticadoDTOA getUsuarioRespuesta () { return usuarioRespuesta; }
	public void setUsuarioRespuesta (UsuarioWebAutenticadoDTOA usuarioRespuesta) { this.usuarioRespuesta = usuarioRespuesta; }

	
	
	// endregion
	
	
	
	// region - Constructor and JSON <-> DTOA <-> DTO
	
	public RespuestaDTOA ()
	{
		// Empty constructor
	}
	
	@Override
	public void setFromJSON (JSONObject json)
	{
		try
		{
			if (!JSONObject.NULL.equals(json.opt("Id")))
			{
				this.id = (Integer) json.opt("Id");
			}
			

			if (!JSONObject.NULL.equals(json.opt("Cuerpo")))
			{
			 
				this.cuerpo = (String) json.opt("Cuerpo");
			 
			}

			if (!JSONObject.NULL.equals(json.opt("EsCorrecta")))
			{
			 
				this.esCorrecta = (Boolean) json.opt("EsCorrecta");
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Util")))
			{
			 
				this.util = (Integer) json.opt("Util");
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Fecha")))
			{
			 
			 	String stringDate = (String) json.opt("Fecha");
				this.fecha = DateUtils.stringToDateFormat(stringDate);
			 
			}
			

			JSONObject jsonUsuarioRespuesta = json.optJSONObject("UsuarioRespuesta");
			if (jsonUsuarioRespuesta != null)
			{
				UsuarioWebAutenticadoDTOA tmp = new UsuarioWebAutenticadoDTOA();
				tmp.setFromJSON(jsonUsuarioRespuesta);
				this.usuarioRespuesta = tmp;
			}

			
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}
	
	public JSONObject toJSON ()
	{
		JSONObject json = new JSONObject();
		
		try
		{
			if (this.id != null){
				json.put("Id", this.id);
			}
			
		
		  if (this.cuerpo != null)
			json.put("Cuerpo", this.cuerpo);
		
		
		  if (this.esCorrecta != null)
			json.put("EsCorrecta", this.esCorrecta);
		
		
		  if (this.util != null)
			json.put("Util", this.util.intValue());
		
		
		  if (this.fecha != null)
			json.put("Fecha", DateUtils.dateToFormatString(this.fecha));
		
			

			if (this.usuarioRespuesta != null)
			{
				json.put("UsuarioRespuesta", this.usuarioRespuesta.toJSON());
			}

			
		}
		catch (JSONException e)
		{
			e.printStackTrace();
		}
		
		return json;
	}
	
	@Override 
	public IDTO toDTO ()
	{
		RespuestaDTO dto = new RespuestaDTO ();
		
		// Attributes
		
	dto.setId (this.getId());

		
	dto.setCuerpo (this.getCuerpo());

	dto.setEsCorrecta (this.getEsCorrecta());

	dto.setUtil (this.getUtil());

	dto.setFecha (this.getFecha());

		
		
		// Roles
					// TODO: from DTOA [ UsuarioRespuesta ] (dataType : UsuarioWebAutenticadoDTOA) to DTO [ Usuario ]
		
		
		return dto;
	}

	// endregion
}

	