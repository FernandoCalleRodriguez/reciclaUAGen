
package reciclaUAGenReciclaUARESTAzure.uiModels.DTOA;

import reciclaUAGenReciclaUARESTAzure.uiModels.DTO.*;
import reciclaUAGenReciclaUARESTAzure.uiModels.DTO.utils.*;
import reciclaUAGenReciclaUARESTAzure.uiModels.DTO.enumerations.*;

import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 * Code autogenerated. Do not modify this file.
 */
public class JuegoDTOA extends DTOA
{
	// region - Members, getters and setters

	private Integer id;
	public Integer getId () { return id; }
	public void setId (Integer id) { this.id = id; }

	
	private Integer itemActual;
	public Integer getItemActual () { return itemActual; }
	public void setItemActual (Integer itemActual) { this.itemActual = itemActual; }
	
	private Integer aciertos;
	public Integer getAciertos () { return aciertos; }
	public void setAciertos (Integer aciertos) { this.aciertos = aciertos; }
	
	private Integer fallos;
	public Integer getFallos () { return fallos; }
	public void setFallos (Integer fallos) { this.fallos = fallos; }
	
	private Double puntuacion;
	public Double getPuntuacion () { return puntuacion; }
	public void setPuntuacion (Double puntuacion) { this.puntuacion = puntuacion; }
	
	private Integer intentosItemActual;
	public Integer getIntentosItemActual () { return intentosItemActual; }
	public void setIntentosItemActual (Integer intentosItemActual) { this.intentosItemActual = intentosItemActual; }
	
	private Boolean finalizado;
	public Boolean getFinalizado () { return finalizado; }
	public void setFinalizado (Boolean finalizado) { this.finalizado = finalizado; }
	
	private Integer nivelActual;
	public Integer getNivelActual () { return nivelActual; }
	public void setNivelActual (Integer nivelActual) { this.nivelActual = nivelActual; }
	
	
	
	
	// endregion
	
	
	
	// region - Constructor and JSON <-> DTOA <-> DTO
	
	public JuegoDTOA ()
	{
		// Empty constructor
	}
	
	@Override
	public void setFromJSON (JSONObject json)
	{
		try
		{
			if (!JSONObject.NULL.equals(json.opt("Id")))
			{
				this.id = (Integer) json.opt("Id");
			}
			

			if (!JSONObject.NULL.equals(json.opt("ItemActual")))
			{
			 
				this.itemActual = (Integer) json.opt("ItemActual");
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Aciertos")))
			{
			 
				this.aciertos = (Integer) json.opt("Aciertos");
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Fallos")))
			{
			 
				this.fallos = (Integer) json.opt("Fallos");
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Puntuacion")))
			{
			 
			 	String stringDouble = String.valueOf(json.opt("Puntuacion"));
 				this.puntuacion = Double.parseDouble(stringDouble);
			 
			}

			if (!JSONObject.NULL.equals(json.opt("IntentosItemActual")))
			{
			 
				this.intentosItemActual = (Integer) json.opt("IntentosItemActual");
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Finalizado")))
			{
			 
				this.finalizado = (Boolean) json.opt("Finalizado");
			 
			}

			if (!JSONObject.NULL.equals(json.opt("NivelActual")))
			{
			 
				this.nivelActual = (Integer) json.opt("NivelActual");
			 
			}
			
			
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}
	
	public JSONObject toJSON ()
	{
		JSONObject json = new JSONObject();
		
		try
		{
			if (this.id != null){
				json.put("Id", this.id);
			}
			
		
		  if (this.itemActual != null)
			json.put("ItemActual", this.itemActual.intValue());
		
		
		  if (this.aciertos != null)
			json.put("Aciertos", this.aciertos.intValue());
		
		
		  if (this.fallos != null)
			json.put("Fallos", this.fallos.intValue());
		
		
		  if (this.puntuacion != null)
			json.put("Puntuacion", this.puntuacion);
		
		
		  if (this.intentosItemActual != null)
			json.put("IntentosItemActual", this.intentosItemActual.intValue());
		
		
		  if (this.finalizado != null)
			json.put("Finalizado", this.finalizado);
		
		
		  if (this.nivelActual != null)
			json.put("NivelActual", this.nivelActual.intValue());
		
			
			
		}
		catch (JSONException e)
		{
			e.printStackTrace();
		}
		
		return json;
	}
	
	@Override 
	public IDTO toDTO ()
	{
		JuegoDTO dto = new JuegoDTO ();
		
		// Attributes
		
	dto.setId (this.getId());

		
	dto.setItemActual (this.getItemActual());

	dto.setAciertos (this.getAciertos());

	dto.setFallos (this.getFallos());

	dto.setPuntuacion (this.getPuntuacion());

	dto.setIntentosItemActual (this.getIntentosItemActual());

	dto.setFinalizado (this.getFinalizado());

	dto.setNivelActual (this.getNivelActual());

		
		
		// Roles
		
		
		return dto;
	}

	// endregion
}

	